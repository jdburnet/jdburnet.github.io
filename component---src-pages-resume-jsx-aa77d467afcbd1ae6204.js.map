{"version":3,"sources":["webpack:///./src/utils/listMaker.jsx","webpack:///./src/components/resume/Experience.jsx","webpack:///./src/components/resume/ExperienceSubSection.jsx","webpack:///./src/components/resume/SkillsSubSection.jsx","webpack:///./src/components/resume/ResumeSection.jsx","webpack:///./src/components/resume/Project.jsx","webpack:///./src/pages/resume.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/InlineLink.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/components/Layout.jsx"],"names":["listMaker","items","map","item","react_default","a","createElement","key","Experience","props","title","start","end","contents","listItems","className","css","propTypes","PropTypes","string","isRequired","arrayOf","ExperienceSubSection","company","experiences","experienceItems","SkillsSubSection","skills","skill","rhythm","ResumeSection","subsections","oneOfType","Project","name","url","description","InlineLink","to","text","systemsEngineerExperience","resume_Experience","intelInternExperience","intel","resume_ExperienceSubSection","genentech","infoWedge","ucsc","toolsAndTech","resume_SkillsSubSection","jdburnetWeb","resume_Project","fii","rustMc","evergreenDb","projects","__webpack_exports__","Layout","resume_ResumeSection","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","data","query","render","children","Error","object","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","ExternalLink","InternalLink","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_emotion__WEBPACK_IMPORTED_MODULE_2__","href","HeaderLink","gatsby_browser_entry","Header","id","Header_HeaderLink","components_Header","site","siteMetadata","_3892401927"],"mappings":"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","file":"component---src-pages-resume-jsx-aa77d467afcbd1ae6204.js","sourcesContent":["import React from 'react';\n\nconst listMaker = items => items.map(item => <li key={item}>{item}</li>);\n\nexport default listMaker;\n","import React from 'react';\nimport { css } from 'react-emotion';\nimport PropTypes from 'prop-types';\n\nimport listMaker from '../../utils/listMaker';\n\nconst Experience = (props) => {\n  const {\n    title,\n    start,\n    end,\n    contents,\n  } = props;\n  const listItems = listMaker(contents);\n  return (\n    <div>\n      <div\n        className={css`\n          display: flex;\n          justify-content: space-between;\n        `}\n      >\n        <h4>\n          {title}\n        </h4>\n        <h4>\n          {start}\n          {' '}\n          -\n          {' '}\n          {end}\n        </h4>\n      </div>\n      <div>\n        <ul\n          className={css`\n            list-style: none;\n            margin-left: 0;\n          `}\n        >\n          {listItems}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nExperience.propTypes = {\n  title: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  contents: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Experience;\n","import React from 'react';\nimport { css } from 'react-emotion';\nimport PropTypes from 'prop-types';\n\nimport listMaker from '../../utils/listMaker';\n\nimport Experience from './Experience';\n\nconst ExperienceSubSection = (props) => {\n  const {\n    company,\n    experiences,\n  } = props;\n  const experienceItems = listMaker(experiences);\n  return (\n    <div>\n      <h3>\n        {company}\n      </h3>\n      <div>\n        <ul\n          className={css`\n            list-style: none;\n            margin-left: 0;\n          `}\n        >\n          {experienceItems}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nExperienceSubSection.propTypes = {\n  company: PropTypes.string.isRequired,\n  experiences: PropTypes.arrayOf(Experience).isRequired,\n};\n\nexport default ExperienceSubSection;\n","import React from 'react';\nimport { css } from 'react-emotion';\nimport PropTypes from 'prop-types';\n\nimport { rhythm } from '../../utils/typography';\n\nconst SkillsSubSection = (props) => {\n  const {\n    skills,\n  } = props;\n  const listItems = skills.map(skill => (\n    <li\n      key={skill}\n      className={css`\n        padding-right: ${rhythm(0.5)};\n      `}\n    >\n      {skill}\n    </li>\n  ));\n  return (\n    <div>\n      <ul\n        className={css`\n          display: flex;\n          justify-content: flex-start;\n          flex-wrap: wrap;\n          list-style: none;\n          margin-left: 0;\n        `}\n      >\n        {listItems}\n      </ul>\n    </div>\n  );\n};\n\nSkillsSubSection.propTypes = {\n  skills: PropTypes.string.isRequired,\n};\n\nexport default SkillsSubSection;\n","import React from 'react';\nimport { css } from 'react-emotion';\nimport PropTypes from 'prop-types';\n\nimport listMaker from '../../utils/listMaker';\nimport { rhythm } from '../../utils/typography';\n\nimport ExperienceSubSection from './ExperienceSubSection';\nimport SkillsSubSection from './SkillsSubSection';\n\nconst ResumeSection = (props) => {\n  const {\n    subsections,\n    title,\n  } = props;\n  const listItems = listMaker(subsections);\n  return (\n    <div\n      className={css`\n        display: grid;\n        grid-template-columns: ${rhythm(7)} auto;\n      `}\n    >\n      <h2>\n        <span\n          className={css`\n            border-bottom: 1px solid;\n            padding-left: ${rhythm(0.10)};\n            padding-right: ${rhythm(0.10)};\n          `}\n        >\n          {title}\n        </span>\n      </h2>\n      <ul\n        className={css`\n          list-style: none;\n          margin-left: 0;\n        `}\n      >\n        {listItems}\n      </ul>\n    </div>\n  );\n};\n\nResumeSection.propTypes = {\n  subsections: PropTypes.oneOfType([\n    PropTypes.arrayOf(ExperienceSubSection),\n    PropTypes.arrayOf(SkillsSubSection),\n  ]).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default ResumeSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ExternalLink } from '../InlineLink';\n\nconst Project = (props) => {\n  const {\n    name,\n    url,\n    description,\n  } = props;\n  return (\n    <li>\n      <ExternalLink\n        to={url}\n        text={name}\n      />\n      -\n      {' '}\n      {description}\n    </li>\n  );\n};\n\nProject.propTypes = {\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\n\nexport default Project;\n","import React from 'react';\nimport { css } from 'react-emotion';\n\nimport Layout from '../components/Layout';\nimport ResumeSection from '../components/resume/ResumeSection';\nimport Experience from '../components/resume/Experience';\nimport ExperienceSubSection from '../components/resume/ExperienceSubSection';\nimport SkillsSubSection from '../components/resume/SkillsSubSection';\nimport Project from '../components/resume/Project';\n\nconst systemsEngineerExperience = (\n  <Experience\n    title=\"Systems Validation Engineer\"\n    start=\"February 2017\"\n    end=\"present\"\n    contents={[\n      'Core developer of concurrency focused testing framework, owner of '\n      + 'register access tool and logging module',\n      'Owner of Self Monitoring and Report Techonology (SMART) test plan '\n      + 'and content development',\n      'Firmware debug and root cause analysis',\n    ]}\n  />\n);\nconst intelInternExperience = (\n  <Experience\n    title=\"Test Content Development Intern\"\n    start=\"May 2016\"\n    end=\"January 2017\"\n    contents={[\n      'Own test content development for Self Monitoring Analysis and '\n      + 'Reporting Technology',\n      'Develop device under test detection automation',\n    ]}\n  />\n);\nconst intel = (\n  <ExperienceSubSection\n    company=\"Intel\"\n    experiences={[\n      systemsEngineerExperience,\n      intelInternExperience,\n    ]}\n  />\n);\n\nconst genentech = (\n  <ExperienceSubSection\n    company=\"Genentech\"\n    experiences={[\n      <Experience\n        title=\"Senior Bioprocess Technician\"\n        start=\"July 2014\"\n        end=\"April 2016\"\n        contents={[\n          'Senior Bioprocess Technician in Cell Culture Plant 2 Return to '\n          + 'Service project',\n          'Developer of automated data sheet updates',\n          'Liaison between quality assurance and manufacturing during '\n          + 'descrepent events',\n        ]}\n      />,\n    ]}\n  />\n);\n\nconst infoWedge = (\n  <ExperienceSubSection\n    company=\"infoWedge\"\n    experiences={[\n      <Experience\n        title=\"Engineering Technician\"\n        start=\"June 2010\"\n        end=\"September 2012\"\n        contents={[\n          'Performed setup, operation, maintenance and tear down of portable '\n          + 'exhaust measurement system (PEMS)',\n          'Assured calibration and linearity of lab-grade exhaust emissions '\n          + 'measurement insturmentation',\n          'Assisted in fabrications and installation for PEMS in use testing',\n          'Assisted in design of flow meter calibration system',\n        ]}\n      />,\n    ]}\n  />\n);\n\nconst ucsc = (\n  <ExperienceSubSection\n    company=\"University of California Santa Cruz\"\n    experiences={[\n      <Experience\n        title=\"BS in Bioengineering, Minor in Bioinformatics\"\n        start=\"September 2009\"\n        end=\"June 2013\"\n        contents={[\n          'Cumulative GPA 3.96/4.00, Magna Cum Laude',\n          '2 time recipient of Campus Merit-James Scholarship for Academic '\n          + 'Excellence',\n          'Recipient of Youngs Award for Achievements in Mathematics',\n          'Top Graduate Group in Bioengineering class of 2013',\n        ]}\n      />,\n    ]}\n  />\n);\n\nconst toolsAndTech = (\n  <SkillsSubSection\n    skills={[\n      'Python (expert)',\n      'C (proficient)',\n      'Rust (prior experience)',\n      'JavaScript (prior experience)',\n      'Linux (proficient)',\n      'Git (proficient)',\n      'Gerrit (proficient)',\n      'Make (proficient)',\n    ]}\n  />\n);\n\nconst jdburnetWeb = (\n  <Project\n    name=\"jdburnet-web\"\n    url=\"https://github.com/jdburnet/jdburnet-web\"\n    description=\"personal website using static website generator gatsbyjs\"\n  />\n);\n\nconst fii = (\n  <Project\n    name=\"fii\"\n    url=\"https://github.com/jdburnet/fii\"\n    description=\"command line tool to track progress toward financial independence, written in Rust\"\n  />\n);\n\nconst rustMc = (\n  <Project\n    name=\"rust-mc\"\n    url=\"https://github.com/jdburnet/rust-mc\"\n    description=\"exploring the world of embedded devlopment using Rust\"\n  />\n);\n\nconst evergreenDb = (\n  <Project\n    name=\"evergreendb\"\n    url=\"https://github.com/mrmarkwell/evergreendb\"\n    description=\"custom built database and management tool for Evergreen Family Services with a python backend and Angular2 frontend\"\n  />\n);\n\nconst projects = (\n  <div>\n    <ul\n      className={css`\n        list-style: none;\n        margin-left: 0;\n      `}\n    >\n      {jdburnetWeb}\n      {fii}\n      {rustMc}\n      {evergreenDb}\n    </ul>\n  </div>\n);\n\nexport default () => (\n  <Layout>\n    <div>\n      <ResumeSection\n        title=\"Work\"\n        subsections={[\n          intel,\n          genentech,\n          infoWedge,\n        ]}\n      />\n      <ResumeSection\n        title=\"Projects\"\n        subsections={[\n          projects,\n        ]}\n      />\n      <ResumeSection\n        title=\"Tools and Technology\"\n        subsections={[\n          toolsAndTech,\n        ]}\n      />\n      <ResumeSection\n        title=\"Education\"\n        subsections={[\n          ucsc,\n        ]}\n      />\n    </div>\n  </Layout>\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { css } from 'react-emotion';\n\nconst ExternalLink = (props) => {\n  const {\n    to,\n    text,\n  } = props;\n  return (\n    <a\n      href={to}\n      className={css`\n        text-decoration: none;\n      `}\n    >\n      {' '}\n      {text}\n      {' '}\n    </a>\n  );\n};\n\nconst InternalLink = (props) => {\n  const {\n    to,\n    text,\n  } = props;\n  return (\n    <Link\n      to={to}\n      className={css`\n        text-decoration: none;\n      `}\n    >\n      {' '}\n      {text}\n      {' '}\n    </Link>\n  );\n};\n\nexport {\n  ExternalLink,\n  InternalLink,\n};\n","import React from 'react';\nimport { css } from 'react-emotion';\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\n\nconst HeaderLink = props => (\n  <Link \n    to={props.to}\n    className={css`\n      text-decoration: none;\n    `}\n  >\n    <h3\n      className={css`\n        margin-bottom: ${rhythm(2)};\n      `}\n    >\n      {props.name}\n    </h3>\n  </Link>\n);\n\nconst Header = props => (\n  <div>\n    <div\n      id=\"header\"\n      className={css`\n        display: grid;\n        grid-auto-flow: column;\n        grid-template-columns: 3fr auto;\n        grid-column-gap: ${rhythm(0.5)};\n      `}\n    >\n      <HeaderLink\n        to={`/`}\n        name={props.title}\n      />\n      <HeaderLink\n        to={`/`}\n        name=\"home\"\n      />\n      <HeaderLink\n        to={`/about/`}\n        name=\"about\"\n      />\n      <HeaderLink\n        to={`/resume/`}\n        name=\"resume\"\n      />\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { css } from 'react-emotion';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './Header'\nimport { rhythm } from '../utils/typography';\n\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div\n        className={css`\n          margin: 0 auto;\n          maxwidth: 700px;\n          padding: ${rhythm(2)};\n          padding-top: ${rhythm(1.5)};\n        `}\n      >\n        <Header title={data.site.siteMetadata.title} />\n        {children}\n      </div>\n    )}\n  />\n);\n"],"sourceRoot":""}